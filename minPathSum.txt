public class Solution {
    public int minPathSum(int[][] grid) {
        // Start typing your Java solution below
        // DO NOT write main() function
  
        
        check(grid, 0,0,0 );
        return(min);
        
    }
    public int min = Integer.MAX_VALUE;
    
    public boolean check(int[][] grid, int m , int n, int value) {
        int row = grid.length;
        int column = grid[0].length;
        int temp = value ;
        
        if(m == (row-1)) {
            for(int i = n; i < column; i++) {
                temp += grid[m][i];
            }
            if(temp < min) {
                min =  temp ; 
            }
          return(true);
        }
        
        temp = value ;
        
         if(n == (column-1)) {
            for(int i = m; i < row; i++){
                temp += grid[i][n];
            }
            if(temp < min) {
                min =  temp ; 
            }
            
            return(true);
        }
        
        temp = value + grid[m][n] ;
        
        check(grid, m+1, n,temp);
        check(grid, m, n+1,temp);
        
     return(true);
    }
}
